<!DOCTYPE html>
<html lang="en">

<head>
    @await Html.PartialAsync("_Header")
</head>

<body>

    <!-- START Wrapper -->
    <div class="wrapper">

        <!-- ========== Topbar Start ========== -->
        <header class="topbar">
            <div class="container-fluid">
                <div class="navbar-header">
                    <div class="d-flex align-items-center">
                        <!-- Menu Toggle Button -->
                        <div class="topbar-item">
                            <button type="button" class="button-toggle-menu me-2">
                                <iconify-icon icon="solar:hamburger-menu-broken" class="fs-24 align-middle"></iconify-icon>
                            </button>
                        </div>

                        <!-- Menu Toggle Button -->
                        <div class="topbar-item">
                            <h4 class="fw-bold topbar-button pe-none text-uppercase mb-0">Danh Sách Đơn Hàng</h4>
                        </div>
                    </div>

                    <div class="d-flex align-items-center gap-1">

                        @await Html.PartialAsync("_Topbar")

                        <!-- App Search-->
                        <form class="app-search d-none d-md-block ms-2">
                            <div class="position-relative">
                                <input type="search" name="searchQuery" class="form-control" placeholder="Tìm kiếm..." autocomplete="off" value="">
                                <iconify-icon icon="solar:magnifer-linear" class="search-widget-icon"></iconify-icon>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </header>

        <!-- Right Sidebar (Theme Settings) -->
        @await Html.PartialAsync("_SidebarRight")
        <!-- ========== Topbar End ========== -->
        <!-- ========== App Menu Start ========== -->
        @await Html.PartialAsync("_SidebarMenu")
        <!-- ========== App Menu End ========== -->
        <!-- ==================================================== -->
        <!-- Start right Content here -->
        <!-- ==================================================== -->
        <div>

            <div class="page-content">

                <!-- Start Container Fluid -->
                <div class="container-xxl">

                    <div class="row">
                        <div class="col-md-6 col-xl-3">
                            <div class="card bg-success-subtle">
                                <div class="card-body">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <div>
                                            <h4 class="card-title mb-2">Tổng Đơn Hàng</h4>
                                            <p id="TotalOrders" class="text-muted fw-medium fs-22 mb-0">999</p>
                                        </div>
                                        <div>
                                            <div class="avatar-md bg-primary bg-opacity-10 rounded">
                                                <iconify-icon icon="solar:chat-round-money-broken" class="fs-32 text-primary avatar-title"></iconify-icon>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-xl-3">
                            <div class="card bg-primary-subtle">
                                <div class="card-body">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <div>
                                            <h4 class="card-title mb-2">Đơn Hàng Thành Công</h4>
                                            <p id="OrderSuccess" class="text-muted fw-medium fs-22 mb-0">999</p>
                                        </div>
                                        <div>
                                            <div class="avatar-md bg-primary bg-opacity-10 rounded">
                                                <iconify-icon icon="solar:box-broken" class="fs-32 text-primary avatar-title"></iconify-icon>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-xl-3">
                            <div class="card bg-warning-subtle">
                                <div class="card-body">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <div>
                                            <h4 class="card-title mb-2">Đơn Hàng Đang Chờ</h4>
                                            <p id="OrderPending" class="text-muted fw-medium fs-22 mb-0">999</pi>
                                        </div>
                                        <div>
                                            <div class="avatar-md bg-primary bg-opacity-10 rounded">
                                                <iconify-icon icon="solar:tram-broken" class="fs-32 text-primary avatar-title"></iconify-icon>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-xl-3">
                            <div class="card bg-danger-subtle">
                                <div class="card-body">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <div>
                                            <h4 class="card-title mb-2">Đơn Hàng Bị Hủy</h4>
                                            <p id="OrderCancel" class="text-muted fw-medium fs-22 mb-0">999</p>
                                        </div>
                                        <div>
                                            <div class="avatar-md bg-primary bg-opacity-10 rounded">
                                                <iconify-icon icon="solar:cart-cross-broken" class="fs-32 text-primary avatar-title"></iconify-icon>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-12">
                            <div class="card">
                                <div class="d-flex card-header justify-content-between align-items-center">
                                    <div>
                                        <h4 class="card-title">Tất Cả</h4>
                                    </div>
                                    <div class="dropdown">
                                        <a href="#" class="dropdown-toggle btn btn-sm btn-outline-light rounded" data-bs-toggle="dropdown" aria-expanded="false">
                                            Sắp Xếp
                                        </a>
                                        <div class="dropdown-menu dropdown-menu-end">
                                            <!-- item-->
                                            <a href="#!" class="dropdown-item" onclick="setSortCriteria('name')">Tên</a>
                                            <a href="#!" class="dropdown-item" onclick="setSortCriteria('status')">Trạng thái</a>
                                            <a href="#!" class="dropdown-item" onclick="setSortCriteria('createDate')">Ngày đặt</a>
                                            <a href="#!" class="dropdown-item" onclick="setSortCriteria('totalAmount')">Giá tiền</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body p-0">
                                    <div class="table-responsive">
                                        <table class="table align-middle mb-0 table-hover table-centered">
                                            <thead class="bg-light-subtle">
                                                <tr>
                                                    <th>#</th>
                                                    <th>Mã Đơn Hàng</th>
                                                    <th>Ngày Đặt</th>
                                                    <th>Email</th>
                                                    <th>PT Thanh Toán</th>
                                                    <th>Sản Phẩm</th>
                                                    <th>Tổng Tiền</th>
                                                    <th>Trạng Thái</th>
                                                    <th>Hành Động</th>
                                                </tr>
                                            </thead>
                                            <tbody id="orderTableBody">
                                                <!--Data-->
                                            </tbody>
                                        </table>
                                    </div>
                                    <!-- end table-responsive -->
                                </div>
                                <div class="card-footer border-top">
                                    <nav aria-label="Page navigation example">
                                        <ul class="pagination justify-content-end mb-0" id="pagination">
                                            <!--Trang-->
                                        </ul>
                                    </nav>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
                <!-- End Container Fluid -->
                <!-- ========== Footer Start ========== -->
                @await Html.PartialAsync("_Footer")
                <!-- ========== Footer End ========== -->

            </div>
            <!-- ==================================================== -->
            <!-- End Page Content -->
            <!-- ==================================================== -->


        </div>

    </div>
    <!-- END Wrapper -->
    <!-- Vendor Javascript (Require in all Page) -->
    <script src="~/js/vendor.js"></script>

    <!-- App Javascript (Require in all Page) -->
    <script src="~/js/app.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        const itemsPerPage = 8;
        let currentPage = 1;
        const maxVisiblePages = 5;
        let searchQuery = '';
        let sortCriteria = 'name';
        let isDescending = false;
        const API_URL = "@ViewBag.ApiBaseUrl";

        function updateUrlParameters() {
            const url = new URL(window.location);
            url.searchParams.set('searchQuery', searchQuery);
            url.searchParams.set('sortCriteria', sortCriteria);
            url.searchParams.set('currentPage', currentPage);
            window.history.pushState({}, '', url);
            console.log('Updated URL:', url.toString());
        }

        async function setSortCriteria(criteria) {
            if (sortCriteria === criteria) {
                // Nếu tiêu chí sắp xếp giống lần trước, đổi trạng thái isDescending
                isDescending = !isDescending;
            } else {
                // Nếu tiêu chí sắp xếp thay đổi, đặt isDescending về false
                isDescending = false;
            }
            sortCriteria = criteria;
            currentPage = 1;
            updateUrlParameters();
            await RenderOrderTable(currentPage);
            await renderPagination();
        }

        async function RenderOrderTable(page) {
            const orders = await getOrders(searchQuery, page, itemsPerPage, sortCriteria);
            const tableBody = document.getElementById('orderTableBody');
            tableBody.innerHTML = '';
            orders.forEach((item, index) => {
                tableBody.innerHTML += createOrdersRow(item, (page - 1) * itemsPerPage + index);
            });
        }

        async function renderPagination() {
            const totalPages = await getTotalPages();
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';

            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, currentPage + Math.floor(maxVisiblePages / 2));

            if (endPage - startPage + 1 < maxVisiblePages) {
                if (endPage === totalPages) {
                    startPage = Math.max(1, endPage - maxVisiblePages + 1);
                } else {
                    endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
                }
            }

            pagination.innerHTML += `
                            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                                <a class="page-link" href="javascript:void(0);" onclick="changePage(${currentPage - 1})">Trước</a>
                            </li>
                        `;

            for (let i = startPage; i <= endPage; i++) {
                pagination.innerHTML += `
                                <li class="page-item ${i === currentPage ? 'active' : ''}">
                                    <a class="page-link" href="javascript:void(0);" onclick="changePage(${i})">${i}</a>
                                </li>
                            `;
            }

            pagination.innerHTML += `
                            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                                <a class="page-link" href="javascript:void(0);" onclick="changePage(${currentPage + 1})">Tiếp Theo</a>
                            </li>
                        `;
        }

        async function changePage(page) {
            const totalPages = await getTotalPages();
            if (page < 1 || page > totalPages) return;
            currentPage = page;
            await RenderOrderTable(page);
            renderPagination();
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-GB'); // Định dạng DD/MM/YYYY
        }

        function createOrdersRow(item, index) {

            const price = parseFloat(item.totalAmount);
            const formattedPrice = isNaN(price) ? '0' : price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            return `
                            <tr>
                                <td>${index + 1}</td>
                                <td>#INV-${item.orderId.toUpperCase().substring(0, 8)}</td>
                                <td>${formatDate(item.orderDate)}</td>
                                <td>${item.email}</td>
                                <td>${item.paymentMethod}</td>
                                <td>${item.totalProduct}</td>
                                <td>${formattedPrice}</td>
                                <td>
                                ${item.status.toLowerCase() === 'done' ? '<span class="badge bg-success">Success</span>' :
                                  item.status.toLowerCase() === 'pending' ? '<span class="badge bg-warning">Pending</span>' :
                                 '<span class="badge bg-danger">Cancel</span>'}
                                </td>

                                <td>
                                   <div class="d-flex gap-2">
                                       <a href="Order/DetailOrder/${item.orderId}" class="btn btn-light btn-sm"><iconify-icon icon="solar:eye-broken" class="align-middle fs-18"></iconify-icon></a>
                                   </div>
                                </td>
                            </tr>
                        `;
        }

        async function getOrders(textsearch, page, limit, sortCriteria) {
            const url = `${API_URL}/api/Orders/GetFilterOrdered?searchQuery=${encodeURIComponent(textsearch)}&page=${page}&sortCriteria=${encodeURIComponent(sortCriteria)}&isDescending=${isDescending}`;
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: url,
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        resolve(data);
                        console.log('Order received:', data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error:', textStatus, errorThrown);
                        reject(errorThrown);
                    }
                });
            });
        }

        async function getTotalPages() {
            const response = await $.ajax({
                url: `${API_URL}/api/Orders/TotalPagesOrdered?searchQuery=` + encodeURIComponent(searchQuery),
                type: 'GET',
                dataType: 'json'
            });
            return response > 0 ? response : 1;
        }

        document.querySelector('input[name="searchQuery"]').addEventListener('keydown', async (event) => {
            if (event.key === 'Enter') {
                event.preventDefault();
                searchQuery = event.target.value;
                currentPage = 1;
                await RenderOrderTable(currentPage);
                await renderPagination();
            }
        });
        async function loadOrdersStats() {
            try {
                const response = await fetch(`${API_URL}/api/Orders/GetOrdersStats`);
                const stats = await response.json();
                console.log(stats);
                document.getElementById('TotalOrders').innerText = `${stats.totalOrders}`;
                document.getElementById('OrderSuccess').innerText = `${stats.orderSuccess}`;
                document.getElementById('OrderPending').innerText = `${stats.ordersPending}`;
                document.getElementById('OrderCancel').innerText = `${stats.orderCancel}`;
            } catch (error) {
                console.error("Failed to load orders stats: ", error);
            }

        }

        loadOrdersStats();
        RenderOrderTable(currentPage);
        renderPagination();
    </script>
</body>

</html>